name: Unit Tests with Allure Report

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'lab3/code/**'
  push:
    branches: [ main, develop ]
    paths:
      - 'lab3/code/**'

jobs:
  run-unit-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Setup Java (для Allure)
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install Allure Commandline
      run: |
        sudo apt-get update
        sudo apt-get install -y allure

    - name: Restore dependencies
      run: dotnet restore lab3/code/BD.sln

    - name: Build project
      run: dotnet build lab3/code/BD.sln -c Release --no-restore

    - name: Run tests with Allure logger
      run: |
        cd lab3/code
        mkdir -p ../allure-results
        dotnet test Tests/Tests.csproj -c Release --no-build \
          --logger "trx;LogFileName=test_results.trx" \
          --logger "allure" \
          --results-directory ../allure-results

    - name: Generate Allure report
      run: |
        cd lab3
        allure generate allure-results -o allure-report --clean

    - name: Upload Allure report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: lab3/allure-report/
        retention-days: 7

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: lab3/allure-results/
        retention-days: 7

    - name: Create summary comment
      uses: actions/github-script@v7
      if: always() && github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          let passed = 0;
          let failed = 0;
          let skipped = 0;
          
          try {
            const resultsPath = 'lab3/allure-results/test_results.trx';
            if (fs.existsSync(resultsPath)) {
              const data = fs.readFileSync(resultsPath, 'utf8');
              const passedMatch = data.match(/passed="(\d+)"/);
              const failedMatch = data.match(/failed="(\d+)"/);
              const skippedMatch = data.match(/skipped="(\d+)"/);
              
              passed = passedMatch ? parseInt(passedMatch[1]) : 0;
              failed = failedMatch ? parseInt(failedMatch[1]) : 0;
              skipped = skippedMatch ? parseInt(skippedMatch[1]) : 0;
            }
          } catch (e) {
            console.log('Error parsing test results:', e);
          }
          
          const total = passed + failed + skipped;
          const successRate = total > 0 ? Math.round((passed / total) * 100) : 0;
          
          const message = `## 📊 Allure Test Report
          
          **Results for this PR:**
          ✅ **Passed:** ${passed}
          ❌ **Failed:** ${failed}
          ⏩ **Skipped:** ${skipped}
          📈 **Success rate:** ${successRate}%
          
          ### 📁 Artifacts
          - [Download Allure Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          - [View Raw Results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          
          *Report generated automatically*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: message
          });

  # Опционально: Деплой отчета на GitHub Pages
  deploy-report:
    needs: run-unit-tests
    runs-on: ubuntu-latest
    if: success() || failure()
    
    steps:
    - name: Download Allure report
      uses: actions/download-artifact@v4
      with:
        name: allure-report

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./allure-report
        keep_files: true