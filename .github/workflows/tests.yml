name: Tests with Report

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'code/**'

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build test image
      run: docker build -t bd-unit-tests -f ./tests_files/Dockerfile.unit ./code
      
    - name: Run unit tests with HTML output
      run: |
        mkdir -p test-results
        docker run --rm -v $(pwd)/test-results:/test-results bd-unit-tests --logger "html;LogFileName=/test-results/unit-report.html"

    - name: Upload unit test results
      uses: actions/upload-artifact@v4
      with:
        name: unit-test-report
        path: test-results/unit-report.html
        retention-days: 2

  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    if: success()

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: integrationdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build integration test image
      run: docker build -t bd-integration-tests -f ./tests_files/Dockerfile.integration ./code

    - name: Wait for PostgreSQL to be ready
      run: |
        echo "Waiting for PostgreSQL to start..."
        for i in {1..30}; do
          if nc -z localhost 5432; then
            echo "PostgreSQL is ready!"
            exit 0
          fi
          echo "Waiting for PostgreSQL... Attempt $i/30"
          sleep 2
        done
        echo "PostgreSQL failed to start within 60 seconds"
        exit 1

    - name: Run integration tests with HTML output
      run: |
        mkdir -p test-results
        docker run --rm \
          --network host \
          -v $(pwd)/test-results:/test-results \
          bd-integration-tests \
          --logger "html;LogFileName=/test-results/integration-report.html"

    - name: Upload integration test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: integration-test-report
        path: test-results/integration-report.html
        retention-days: 2
        
  e2e-tests:
    runs-on: ubuntu-latest
    needs: integration-tests
    if: success()

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: E2Edb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build e2e test image
      run: docker build -t bd-e2e-tests -f ./tests_files/Dockerfile.e2e ./code

    - name: Wait for PostgreSQL to be ready
      run: |
        echo "Waiting for PostgreSQL to start..."
        for i in {1..30}; do
          if nc -z localhost 5432; then
            echo "PostgreSQL is ready!"
            exit 0
          fi
          echo "Waiting for PostgreSQL... Attempt $i/30"
          sleep 2
        done
        echo "PostgreSQL failed to start within 60 seconds"
        exit 1

    - name: Run e2e tests with HTML output
      run: |
        mkdir -p test-results
        docker run --rm \
          --network host \
          -v $(pwd)/test-results:/test-results \
          bd-e2e-tests \
          --logger "html;LogFileName=/test-results/e2e-report.html"

    - name: Upload E2E test results
      if : always()
      uses: actions/upload-artifact@v4
      with:
        name: E2E-test-report
        path: test-results/e2e-report.html
        retention-days: 2